% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Cluster.R
\name{cluster_berenhaut}
\alias{cluster_berenhaut}
\title{Berenhaut Community Detection on Networks}
\usage{
cluster_berenhaut(graph, short_paths = NULL)
}
\arguments{
\item{graph}{an igraph object.}

\item{short_paths}{either a |V|x|V| symmetric matrix containing the shortest
path distances between the vertices in \code{graph} or a \code{\link{dist}}
object from the \code{\link{stats}} package. If \code{NULL} (default), the
shortest paths will be calculated. If shortest paths are available, this
functions runs ~50\% faster. Counterintuitively, this function will be faster
if \code{short_paths} is of class "matrix" instead of class "dist".}
}
\value{
\code{cluster_berenhaut} returns an \code{\link{hclust}} object from
the \code{\link{stats}} package.
}
\description{
Performs community detection on networks using average shortest path distance
of vertex neighbors as the set of dissimilarities for heirarcal clustering
with "average" as the agglomeration method. If shortest paths are supplied,
this function is ~50\% faster. It is also best to use a symmetric "matrix"
rather than a "dist" object if performance is critical. Time complexity is
O(n^2 log n) and space complexity is O(n^2). This function returns an
\code{\link{hclust}} object rather than an igraph \code{\link{communities}}
object because the algorithm does not attempt to use modularity use or
maximize modularity (although the resulting partitioning results in a maximum
modularity that is competitive with the top community detection algorithms).
}
\examples{
require(stats)
cb <- cluster_berenhaut(karate)
plot(cb)
}
\keyword{cluster}
\keyword{graphs}

