% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Paths.R
\name{shortest_path_lengths}
\alias{shortest_path_lengths}
\title{Shortest Path Lengths (Unweighted & Undirected)}
\usage{
shortest_path_lengths(graph, nodes = V(graph))
}
\arguments{
\item{graph}{an igraph object.}

\item{nodes}{a subset of the nodes of the graph to find the distances between.
defaults to all nodes (all pairs shortest path lengths).}
}
\value{
returns a symmetric "matrix" object where the \eqn{ij}th entry is the
shortest path distance from \eqn{v_i} to \eqn{v_j}, \eqn{d(v_i,v_j)}, for all
\eqn{v_i,v_j \in V}.
}
\description{
Computes shortest path lengths for an unweighted, undirected graph. For
graphs with these properties, this function is much faster than the function
\code{\link{distances}} in the \pkg{\link{igraph}} package.
}
\examples{
sp <- shortest_path_lengths(dolphins);
sp[1:10,1:10];
## Check against igraphs distance function
all(sp == igraph::distances(dolphins, algorithm = "unweighted"));

}
\keyword{graphs}

